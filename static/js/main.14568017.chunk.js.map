{"version":3,"sources":["redux/reducers/imageListSlice.js","redux/reducers/loadingSlice.js","Layout/Search.js","redux/reducers/favoritesSlice.js","Components/Image.js","Components/FavoritesModal.js","Layout/FavoritesSidebar.js","Layout/Body.js","App.js","redux/store.js","index.js"],"names":["imageListSlice","createSlice","name","initialState","images","web","reducers","setImageList","state","action","payload","clearImageList","actions","loadingSlice","value","setIsLoading","Search","useState","searchInput","setSearchInput","dispatch","useDispatch","className","onSubmit","event","preventDefault","url","axios","get","then","response","data","results","catch","error","console","log","placeholder","onChange","target","JSON","parse","localStorage","getItem","favoritesSlice","addToFavorites","includes","removeFromFavorites","filter","id","hydrate","Image","props","details","favoriteList","useSelector","src","urls","small","alt","tags","title","xs","user","find","item","color","onClick","FavoritesModal","modalOpen","modalContent","toggleModal","isOpen","toggle","centered","size","description","regular","FavoritesSidebar","setModalOpen","setModalContent","canvasOpen","setCanvasOpen","imageData","toggleCanvas","outline","length","map","followCursor","plugins","content","style","maxWidth","Body","imageList","isLoading","image","App","favState","useEffect","setItem","stringify","store","configureStore","reducer","imageListReducer","loadingReducer","favoritesReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14568017.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport const imageListSlice = createSlice({\r\n  name: \"imageList\",\r\n  initialState: { images: [], web: [] },\r\n  reducers: {\r\n    setImageList: (state, action) => {\r\n      state.images = action.payload\r\n    },\r\n    clearImageList: (state) => {\r\n      state.images = []\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setImageList, clearImageList } = imageListSlice.actions\r\nexport default imageListSlice.reducer\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport const loadingSlice = createSlice({\r\n  name: \"isLoading\",\r\n  initialState: { value: false },\r\n  reducers: {\r\n    setIsLoading: (state) => {\r\n      state.value = !state.value\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setIsLoading } = loadingSlice.actions\r\nexport default loadingSlice.reducer\r\n","import axios from \"axios\"\r\nimport React, { useState } from \"react\"\r\nimport { Row, Input, Button, Form } from \"reactstrap\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setImageList } from \"../redux/reducers/imageListSlice\"\r\nimport { setIsLoading } from \"../redux/reducers/loadingSlice\"\r\n\r\nconst Search = () => {\r\n  const [searchInput, setSearchInput] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const key = \"vWSGto7UY05Q1PZMLdqszg-mxU4kIsOWbeOLGyu1ACA\"\r\n    const url = `https://api.unsplash.com/search/photos?page=1&query=${searchInput}&client_id=${key}`\r\n    axios\r\n      .get(url)\r\n      .then(dispatch(setIsLoading()), setSearchInput(\"\"))\r\n      .then((response) => {\r\n        dispatch(setImageList(response.data.results))\r\n        dispatch(setIsLoading())\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Row className=\"search-form\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"what are you looking for?\"\r\n          value={searchInput}\r\n          onChange={(event) => setSearchInput(event.target.value)}\r\n        ></Input>\r\n        <Button>Search</Button>\r\n      </Form>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(\"favorites\") || \"[]\")\r\n\r\nexport const favoritesSlice = createSlice({\r\n  name: \"favoritesList\",\r\n  initialState,\r\n  reducers: {\r\n    addToFavorites: (state, action) => {\r\n      if (state.includes(action.payload)) return\r\n      else return [...state, action.payload]\r\n    },\r\n    removeFromFavorites: (state, action) => {\r\n      return state.filter(({ id }) => id !== action.payload)\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addToFavorites, removeFromFavorites, hydrate } =\r\n  favoritesSlice.actions\r\nexport default favoritesSlice.reducer\r\n","import React from \"react\"\r\nimport { Container, Button, Row, Col } from \"reactstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  addToFavorites,\r\n  removeFromFavorites,\r\n} from \"../redux/reducers/favoritesSlice\"\r\n\r\nconst Image = (props) => {\r\n  const { details } = props\r\n\r\n  const favoriteList = useSelector((state) => state.favoriteList)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <Container className=\"image-wrapper\">\r\n      <img src={details.urls.small} alt={details.tags.title}></img>\r\n      <Row className=\"image-details\">\r\n        <Col xs=\"6\">\r\n          <p>Taken by: {details.user.name}</p>\r\n        </Col>\r\n        <Col xs=\"4\">\r\n          {favoriteList.find((item) => item.id === details.id) ? (\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => dispatch(removeFromFavorites(details.id))}\r\n            >\r\n              Remove from favorites\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => dispatch(addToFavorites(details))}>\r\n              Add to favorites\r\n            </Button>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  removeFromFavorites,\r\n  addToFavorites,\r\n} from \"../redux/reducers/favoritesSlice\"\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\"\r\n\r\nconst FavoritesModal = (props) => {\r\n  const { modalOpen, modalContent, toggleModal } = props\r\n  const favoriteList = useSelector((state) => state.favoriteList)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <Modal isOpen={modalOpen} toggle={toggleModal} centered size=\"xl\">\r\n      <ModalHeader>\r\n        <p>\r\n          {modalContent.description !== null\r\n            ? `${modalContent.description} by ${modalContent.user.name}`\r\n            : `Taken by: ${modalContent.user.name}`}\r\n        </p>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <img src={modalContent.urls.regular} alt={modalContent.description} />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        {favoriteList.find((item) => item.id === modalContent.id) ? (\r\n          <Button\r\n            color=\"danger\"\r\n            onClick={() => dispatch(removeFromFavorites(modalContent.id))}\r\n          >\r\n            Remove from favorites\r\n          </Button>\r\n        ) : (\r\n          <Button onClick={() => dispatch(addToFavorites(modalContent))}>\r\n            Add to favorites\r\n          </Button>\r\n        )}\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default FavoritesModal\r\n","import React, { useState } from \"react\"\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Offcanvas,\r\n  OffcanvasBody,\r\n  Button,\r\n} from \"reactstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nimport Tippy from \"@tippyjs/react\"\r\nimport { followCursor } from \"tippy.js\"\r\nimport FavoritesModal from \"../Components/FavoritesModal\"\r\n\r\nconst FavoritesSidebar = () => {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [modalContent, setModalContent] = useState(null)\r\n  const [canvasOpen, setCanvasOpen] = useState(false)\r\n  const favoriteList = useSelector((state) => state.favoriteList)\r\n\r\n  const toggleModal = (imageData) => {\r\n    setModalOpen(!modalOpen)\r\n    setModalContent(modalOpen ? null : imageData)\r\n  }\r\n\r\n  const toggleCanvas = () => setCanvasOpen(!canvasOpen)\r\n\r\n  return (\r\n    <Container className=\"favorites-sidebar\">\r\n      <Button\r\n        outline\r\n        onClick={() => {\r\n          toggleCanvas()\r\n        }}\r\n        className=\"canvas-toggler\"\r\n      >\r\n        Show favorites\r\n      </Button>\r\n\r\n      <Offcanvas isOpen={canvasOpen} toggle={toggleCanvas}>\r\n        <OffcanvasBody>\r\n          <h4>Your favorites - click them!</h4>\r\n          {favoriteList.length > 0 &&\r\n            favoriteList.map((item) => (\r\n              <Row key={item.id} className=\"favorite-item\">\r\n                <Col onClick={() => toggleModal(item)}>\r\n                  <Tippy\r\n                    followCursor={true}\r\n                    plugins={[followCursor]}\r\n                    content={\r\n                      <img\r\n                        src={item.urls.small}\r\n                        alt={item.tags.title}\r\n                        style={{ maxWidth: \"15rem\" }}\r\n                      />\r\n                    }\r\n                  >\r\n                    <p>\r\n                      {item.description !== null\r\n                        ? `${item.description} by ${item.user.name}`\r\n                        : `Taken by: ${item.user.name}`}\r\n                    </p>\r\n                  </Tippy>\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n        </OffcanvasBody>\r\n      </Offcanvas>\r\n\r\n      {modalContent ? (\r\n        <FavoritesModal\r\n          modalOpen={modalOpen}\r\n          modalContent={modalContent}\r\n          toggleModal={toggleModal}\r\n        />\r\n      ) : null}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FavoritesSidebar\r\n","import React from \"react\"\r\nimport Search from \"./Search\"\r\nimport Image from \"../Components/Image\"\r\nimport FavoritesSidebar from \"./FavoritesSidebar\"\r\n\r\nimport { Container, Spinner } from \"reactstrap\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst Body = () => {\r\n  const imageList = useSelector((state) => state.imageList.images)\r\n  const favoriteList = useSelector((state) => state.favoriteList)\r\n  const isLoading = useSelector((state) => state.isLoading.value)\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      {imageList.length > 0 ? (\r\n        <Container className=\"body-container\">\r\n          {isLoading ? (\r\n            <Spinner />\r\n          ) : (\r\n            imageList.map((image) => <Image key={image.id} details={image} />)\r\n          )}\r\n        </Container>\r\n      ) : null}\r\n      {favoriteList.length > 0 ? <FavoritesSidebar /> : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Body\r\n","import React, { useEffect } from \"react\"\nimport \"./Style/style.scss\"\nimport Body from \"./Layout/Body\"\nimport { useSelector } from \"react-redux\"\n\nconst App = () => {\n  const favState = useSelector((state) => state.favoriteList)\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favState))\n  }, [favState])\n\n  return (\n    <div className=\"app\">\n      <Body />\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport imageListReducer from \"./reducers/imageListSlice\"\r\nimport loadingReducer from \"./reducers/loadingSlice\"\r\nimport favoritesReducer from \"./reducers/favoritesSlice\"\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    imageList: imageListReducer,\r\n    isLoading: loadingReducer,\r\n    favoriteList: favoritesReducer,\r\n  },\r\n})\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./redux/store\"\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}